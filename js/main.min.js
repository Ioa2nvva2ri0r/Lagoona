"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function _createForOfIteratorHelper(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var o=0,r=function(){};return{s:r,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,s=!0,a=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return s=e.done,e},e:function(e){a=!0,i=e},f:function(){try{s||null==n.return||n.return()}finally{if(a)throw i}}}}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n<t;n++)o[n]=e[n];return o}function elemVisible(e,t,n){e.style.display=n,e.classList.add(t)}function elemHidden(e,t,n,o){void 0!==t&&e.classList.remove(t),e.classList.add(n),setTimeout((function(){e.style.display="none",e.classList.remove(n)}),o)}var tourInputValue,menu=document.getElementById("menu"),menuOpen=document.getElementById("menu-open"),menuClose=document.getElementById("menu-close");function hiddenMenu(){document.body.addEventListener("click",(function(e){if(window.screen.width<=820){if("none"===menu.style.display)return;menu.contains(e.target)||menuOpen.contains(e.target)||elemHidden(menu,"header__nav-open","header__nav-close",395)}else menu.style.display="flex"}))}menuOpen.addEventListener("click",(function(){return elemVisible(menu,"header__nav-open","flex")})),menuClose.addEventListener("click",(function(){return elemHidden(menu,"header__nav-open","header__nav-close",395)})),window.addEventListener("load",(function(){return hiddenMenu()})),window.addEventListener("resize",(function(){return hiddenMenu()})),document.querySelectorAll("#tourists, #nights, #date").forEach((function(e){e.addEventListener("input",(function(){this.value=this.value.replace("date"===e.id?/[^0-9.]/g:/[^0-9]/g,""),this.value.length>this.maxLength&&(this.value=this.value.slice(0,this.maxLength))}))}));var dropdownOpen="tour__form-dropdown-open",dropdownClose="tour__form-dropdown-close",selectActive="tour__form-dropdown-select-active";document.querySelectorAll(".tour__form-dropdown-select").forEach((function(e){var t,n=_createForOfIteratorHelper(e.parentElement.children);try{var o=function(){var n=t.value;if(n.classList.contains("tour__form-dropdown")){e.addEventListener("click",(function(){this.classList.contains(selectActive)?(this.classList.remove(selectActive),elemHidden(n,dropdownOpen,dropdownClose,395)):(this.classList.add(selectActive),elemVisible(n,dropdownOpen,"flex"))}));var o,r=_createForOfIteratorHelper(n.children);try{for(r.s();!(o=r.n()).done;){o.value.addEventListener("click",(function(t){var o,r=_createForOfIteratorHelper(e.children);try{for(r.s();!(o=r.n()).done;){var i=o.value;"INPUT"===i.nodeName&&(tourInputValue=i.value,i.value=t.currentTarget.textContent,t.currentTarget.textContent=tourInputValue)}}catch(e){r.e(e)}finally{r.f()}e.classList.remove(selectActive),elemHidden(n,dropdownOpen,dropdownClose,395)}))}}catch(e){r.e(e)}finally{r.f()}document.body.addEventListener("click",(function(t){"none"!==n.style.display&&(e.contains(t.target)||n.contains(t.target)||(e.classList.remove(selectActive),elemHidden(n,dropdownOpen,dropdownClose,395)))}))}};for(n.s();!(t=n.n()).done;)o()}catch(e){n.e(e)}finally{n.f()}})),formSubmit(document.getElementById("tour-form"),document.getElementById("tour-message"),"tour__message-open");var contactsForm=document.getElementById("contacts-form"),contactsFormOpen=document.getElementById("contacts-form-open"),contactsFormClose=document.getElementById("contacts-form-close"),headerBtnCallback=document.getElementById("callback");headerBtnCallback.addEventListener("click",(function(){return elemVisible(contactsForm,"contacts__form-open","flex")})),contactsFormOpen.addEventListener("click",(function(){return elemVisible(contactsForm,"contacts__form-open","flex")})),contactsFormClose.addEventListener("click",(function(){return elemHidden(contactsForm,"contacts__form-open","contacts__form-close",395)})),document.body.addEventListener("click",(function(e){"none"!==contactsForm.style.display&&(contactsForm.contains(e.target)||contactsFormOpen.contains(e.target)||headerBtnCallback.contains(e.target)||elemHidden(contactsForm,"contacts__form-open","contacts__form-close",395))})),formSubmit(contactsForm,document.getElementById("contacts-message"),"contacts__message-open");var AnchorLink=function(){function e(t){if(_classCallCheck(this,e),void 0===t.link||null===document.querySelector("".concat(t.link)))throw new Error("This link is not listed or does not exist!");if("HTMLAnchorElement"!==Object.getPrototypeOf(document.querySelector("".concat(t.link))).constructor.name)throw new Error("This selector is not a link!");if(void 0===t.topOffset)this.topOffset=100;else{if(isNaN(t.topOffset))throw new Error("Top offset must be a number!");if(t.topOffset<100)throw new Error("Top offset cannot be less than 100!");this.topOffset=t.topOffset}this.link=document.querySelectorAll("".concat(t.link))}return _createClass(e,[{key:"link",get:function(){return this._link},set:function(e){this._link=e,this.eventLink(this._link)}},{key:"retreatToAnchor",value:function(e){var t=e.getAttribute("href").substring(1);return document.getElementById("".concat(t)).getBoundingClientRect().top-this.topOffset}},{key:"eventLink",value:function(e){var t=this;e.forEach((function(e){e.addEventListener("click",(function(e){e.preventDefault(),window.scrollBy({top:t.retreatToAnchor(e.target),behavior:"smooth"})}))}))}}]),e}();new AnchorLink({link:".header__nav-link",topOffset:200}),new AnchorLink({link:".header__nav-btn",topOffset:200});var ButtonSmoothScroll=function(){function e(t){if(_classCallCheck(this,e),void 0===t.btn||null===document.querySelector("".concat(t.btn)))throw new Error("This button is not listed or does not exist!");if("HTMLButtonElement"!==Object.getPrototypeOf(document.querySelector("".concat(t.btn))).constructor.name)throw new Error("This selector is not a button!");if(void 0===t.display&&(this.display="block"),"string"!=typeof t.display)throw new Error('"display" property is not a string!');if(this.display=t.display,void 0===t.pageYOffset)this.pageYOffset=100;else{if(isNaN(t.pageYOffset))throw new Error("Page Y offset must be a number!");if(t.pageYOffset<100)throw new Error("Page Y offset cannot be less than 100!");this.pageYOffset=t.pageYOffset}void 0!==t.class&&this.btn.classList.add("".concat(t.class)),void 0!==t.content&&(this.btn.innerHTML=t.content),this.btn=document.querySelector("".concat(t.btn))}return _createClass(e,[{key:"btn",get:function(){return this._btn},set:function(e){var t=this;this._btn=e,this._btn.addEventListener("click",(function(){window.scrollTo({top:0,behavior:"smooth"})})),window.addEventListener("load",(function(){return t.visibleOrHiddenBtn()})),window.addEventListener("scroll",(function(){return t.visibleOrHiddenBtn()}),{passive:!0})}},{key:"visibleOrHiddenBtn",value:function(){this.btn.style.position="fixed",window.pageYOffset>=this.pageYOffset?this.btn.style.display=this.display:this.btn.style.display="none"}}]),e}();function responseMessage(e,t,n){e.textContent=t,e.classList.add(n),setTimeout((function(){e.classList.remove(n)}),5e3)}function formSubmit(e,t,n){var o={};e.addEventListener("submit",(function(e){e.preventDefault();var r,i=_createForOfIteratorHelper(e.currentTarget.elements);try{for(i.s();!(r=i.n()).done;){var s=r.value;"INPUT"===s.nodeName&&(o[s.name]=s.value)}}catch(e){i.e(e)}finally{i.f()}fetch("https://jsonplaceholder.typicode.com/posts",{method:"POST",body:JSON.stringify(o),headers:{"Content-type":"application/json; charset=UTF-8"}}).then((function(e){e.ok?responseMessage(t,"Ваши данные успешно отправлены, ожидайте дальнейшей связи с нами!",n):responseMessage(t,"Произошла ошибка при отправке данных, повторите данную операцию позже!",n)}))}))}new ButtonSmoothScroll({btn:"#btn-scroll",display:"flex",pageYOffset:200});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
